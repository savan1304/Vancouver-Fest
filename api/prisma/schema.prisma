generator client {
 provider = "prisma-client-js"
 previewFeatures = ["referentialIntegrity"]
}
datasource db {
 provider = "mysql"
 url = env("DATABASE_URL")
 relationMode = "prisma"
}


model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  auth0Id     String    @unique @default("")
  name        String?
  address     String?
  dateOfBirth DateTime?
  country     String?
}

model Comment {
  id        Int      @id @default(autoincrement())
  name      String
  message   String
  createdAt DateTime @default(now())
  cafeId    Int
  cafe      Cafe     @relation(fields: [cafeId], references: [id])
}

model Cafe {
  id           Int        @id @default(autoincrement())
  imageUrl     String?
  // auth0Id        String     @unique @default("")
  // BusinessNumber String?    @unique // 9 digits + 2 letters + 4 digits format
  name         String?
  hours        String?
  address      String?
  description  String?
  foodItems    FoodItem[] @relation("CafeFoodItems")
  priceRange   String?
  // contactNumber  Int // 10 digit 
  contactEmail String?
  festivals    Festival[] @relation("FestivalCafes")
  comments     Comment[]
}

model Admin {
  id      Int     @id @default(autoincrement())
  email   String  @unique
  auth0Id String  @unique @default("")
  name    String?
}

model Festival {
  id                Int        @id @default(autoincrement())
  imageUrl          String?
  name              String?
  tagline           String?
  startDate         DateTime
  endDate           DateTime
  Location          String?
  numberOfAttendees Int
  foodItems         FoodItem[] @relation("FestivalFoodItems")
  cafes             Cafe[]     @relation("FestivalCafes")
  weather           String?
}

model FoodItem {
  id          Int        @id @default(autoincrement())
  name        String?
  imageUrl    String?
  Summary     String?
  receipeLink String?
  cafes       Cafe[]     @relation("CafeFoodItems")
  festivals   Festival[] @relation("FestivalFoodItems")
  category    String?
}
